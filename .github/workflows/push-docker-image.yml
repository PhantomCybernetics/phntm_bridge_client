name: Build Docker Image

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: phantomcybernetics/bridge-client

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
            arch: amd64
            ros_distro: jazzy
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            arch: arm64
            ros_distro: jazzy
            # Uncomment below for additional ROS distros
            # - platform: linux/amd64
            #   runner: ubuntu-latest
            #   arch: amd64
            #   ros_distro: humble
            # - platform: linux/arm64
            #   runner: ubuntu-24.04-arm
            #   arch: arm64
            #   ros_distro: humble

    outputs:
      image-name: ${{ steps.image.outputs.image }}
      digest: ${{ steps.build.outputs.digest }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Generate image name
      id: image
      run: |
        echo "image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.ros_distro }}-${{ matrix.arch }}-${{ github.sha }}" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        platforms: ${{ matrix.platform }}
        build-args: |
          ROS_DISTRO=${{ matrix.ros_distro }}
        push: true
        tags: ${{ steps.image.outputs.image }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha,scope=${{ matrix.arch }}-${{ matrix.ros_distro }}
        cache-to: type=gha,mode=max,scope=${{ matrix.arch }}-${{ matrix.ros_distro }}

  manifest:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        ros_distro: [jazzy] # [humble, jazzy, kilted]

    steps:
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Create and push multi-arch manifest
      run: |
        # Create multi-arch manifest for each tag
        for tag in ${{ steps.meta.outputs.tags }}; do
          # Skip if tag doesn't match current ROS distro
          if [[ "$tag" != *"${{ matrix.ros_distro }}"* ]] && [[ "$tag" != *"latest"* ]] && [[ "$tag" != *"main"* ]]; then
            continue
          fi

          docker buildx imagetools create \
            --tag "$tag" \
            "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.ros_distro }}-amd64-${{ github.sha }}" \
            "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.ros_distro }}-arm64-${{ github.sha }}"
        done
